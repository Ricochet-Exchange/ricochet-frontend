import {
	DAIAddress,
	DAIxAddress,
	daixEthxExchangeAddress,
	daixMaticxExchangeAddress,
	ethxDaixExchangeAddress,
	hostAddress,
	idaAddress,
	IDLEAddress,
	IDLExAddress,
	MATICxAddress,
	maticxDaixExchangeAddress,
	maticxUsdcxExchangeAddress,
	MKRAddress,
	MKRxAddress,
	rexReferralAddress,
	RICAddress,
	rickosheaAppAddress,
	SUSHIAddress,
	SUSHIxAddress,
	twoWayWETHMarketAddress,
	twoWayMarketWBTCAddress,
	USDCAddress,
	USDCxAddress,
	usdcxMaticxExchangeAddress,
	usdcxRicExchangeAddress,
	ricRexShirtLaunchpadAddress,
	usdcxWbtcxExchangeAddress,
	usdcxWethxExchangeAddress,
	WBTCAddress,
	WBTCxAddress,
	wbtcxUsdcxExchangeAddress,
	WETHAddress,
	WETHxAddress,
	wethxUsdcxExchangeAddress,
	twoWayMarketDAIWETHAddress,
	twoWayMarketMATICUSDCAddress,
	twoWayMarketMATICDAIAddress,
	twoWayMarketWBTCDAIAddress,
	twoWayMarketRICUSDCAddress,
	IbAlluoUSDAddress,
	StIbAlluoUSDAddress,
	IbAlluoETHAddress,
	StIbAlluoETHAddress,
	IbAlluoBTCAddress,
	StIbAlluoBTCAddress,
	twoWayMarketibAlluoUSDETHAddress,
	twoWayMarketibAlluoUSDBTCAddress,
	usdcxibAlluoUSDAddress,
} from 'constants/polygon_config';

export enum ExchangeKeys {
	'DAI_ETH' = 'twoWayDaiWeth',
	'DAI_MATIC' = 'daiMatic',
	'DAI_MKR' = 'daiMkr',
	'ETH_DAI' = 'twoWayWethDai',
	'MATIC_DAI' = 'maticDai',
	'MATIC_USDC' = 'maticUsdc',
	'MKR_DAI' = 'mkrDai',
	'MKR_USDC' = 'mkrUsdc',
	'USDC_ETH_SLP' = 'usdcEthSlp',
	'USDC_IDLE' = 'usdcIdle',
	'USDC_MATIC' = 'usdcMatic',
	'USDC_MKR' = 'usdcMkr',
	'USDC_RIC' = 'usdcRic',
	'USDC_IBALLUO' = 'usdcxibAlluoUSD',
	'USDC_WBTC' = 'twoWayusdcWbtc',
	'USDC_WETH' = 'twoWayusdcWeth',
	'WBTC_USDC' = 'twoWaywbtcUsdc',
	'WETH_USDC' = 'twoWaywethUsdc',
	'TWO_WAY_USDC_RIC' = 'twoWayUsdcRic',
	'TWO_WAY_RIC_USDC' = 'twoWayRicUsdc',
	'TWO_WAY_MATIC_USDC' = 'twoWayMaticUsdc',
	'TWO_WAY_USDC_MATIC' = 'twoWayUsdcMatic',
	'TWO_WAY_MATIC_DAI' = 'twoWayMaticDai',
	'TWO_WAY_DAI_MATIC' = 'twoWayDaiMatic',
	'TWO_WAY_WBTC_DAI' = 'twoWayWbtcDai',
	'TWO_WAY_DAI_WBTC' = 'twoWayDaiWbtc',
	'TWO_WAY_IBUSD_IBETH' = 'twoWayIbUsdIbEth',
	'TWO_WAY_IBETH_IBUSD' = 'twoWayIbEthIbUsd',
	'TWO_WAY_IBUSD_IBBTC' = 'twoWayIbUsdIbBTC',
	'TWO_WAY_IBBTC_IBUSD' = 'twoWayIbBTCIbUsd',
	'MATICx' = 'maticx',
	'MKRx' = 'mkrx',
	'MKR' = 'mkr',
	'DAIx' = 'daix',
	'DAI' = 'dai',
	'USDCx' = 'usdcx',
	'USDC' = 'usdc',
	'WETHx' = 'wethx',
	'WETH' = 'weth',
	'WBTCx' = 'wbtcx',
	'WBTC' = 'wbtc',
	'HOST' = 'host',
	'IDA' = 'ida',
	'RICapp' = 'ricApp',
	'RIC' = 'ric',
	'SUSHIx' = 'sushix',
	'SUSHI' = 'sushi',
	'IDLEx' = 'idlex',
	'IDLE' = 'idle',
	'StIbAlluoUSD' = 'stiballuousd',
	'StIbAlluoETH' = 'stiballuoeth',
	'StIbAlluoBTC' = 'stiballuobtc',
	'IbAlluoUSD' = 'iballuousd',
	'IbAlluoETH' = 'iballuoeth',
	'IbAlluoBTC' = 'iballuobtc',
	'Referral' = 'referral',
}

export const getExchangeAddressFromKey = (exchangeKey: ExchangeKeys) => {
	const addresses = {
		daiEth: daixEthxExchangeAddress,
		daiMatic: daixMaticxExchangeAddress,
		daiMkr: daixMkrxExchangeAddress,
		ethDai: ethxDaixExchangeAddress,
		maticDai: maticxDaixExchangeAddress,
		maticUsdc: maticxUsdcxExchangeAddress,
		mkrDai: mkrxDaixExchangeAddress,
		mkrUsdc: mkrxUsdcxExchangeAddress,
		usdcEthSlp: usdcxEthSlpxExchangeAddress,
		usdcIdle: usdcxIdleExchangeAddress,
		usdcMatic: usdcxMaticxExchangeAddress,
		usdcMkr: usdcxMkrxExchangeAddress,
		usdcRic: usdcxRicExchangeAddress,
		ricRexShirt: ricRexShirtLaunchpadAddress,
		usdcxibAlluoUSD: usdcxibAlluoUSDAddress,
		usdcWbtc: usdcxWbtcxExchangeAddress,
		usdcWeth: usdcxWethxExchangeAddress,
		wbtcUsdc: wbtcxUsdcxExchangeAddress,
		wethUsdc: wethxUsdcxExchangeAddress,
		maticx: MATICxAddress,
		mkrx: MKRxAddress,
		mkr: MKRAddress,
		daix: DAIxAddress,
		dai: DAIAddress,
		usdcx: USDCxAddress,
		usdc: USDCAddress,
		wethx: WETHxAddress,
		weth: WETHAddress,
		wbtcx: WBTCxAddress,
		wbtc: WBTCAddress,
		host: hostAddress,
		ida: idaAddress,
		ricApp: rickosheaAppAddress,
		ric: RICAddress,
		sushix: SUSHIxAddress,
		sushi: SUSHIAddress,
		idlex: IDLExAddress,
		idle: IDLEAddress,
		stiballuoeth: StIbAlluoETHAddress,
		stiballuousd: StIbAlluoUSDAddress,
		iballuousd: IbAlluoUSDAddress,
		iballuoeth: IbAlluoETHAddress,
		stiballuobtc: StIbAlluoBTCAddress,
		iballuobtc: IbAlluoBTCAddress,
		referral: rexReferralAddress,
		twoWayusdcWeth: twoWayWETHMarketAddress,
		twoWaywethUsdc: twoWayWETHMarketAddress,
		twoWaywbtcUsdc: twoWayMarketWBTCAddress,
		twoWayusdcWbtc: twoWayMarketWBTCAddress,
		twoWayDaiWeth: twoWayMarketDAIWETHAddress,
		twoWayWethDai: twoWayMarketDAIWETHAddress,
		twoWayMaticUsdc: twoWayMarketMATICUSDCAddress,
		twoWayUsdcMatic: twoWayMarketMATICUSDCAddress,
		twoWayMaticDai: twoWayMarketMATICDAIAddress,
		twoWayDaiMatic: twoWayMarketMATICDAIAddress,
		twoWayWbtcDai: twoWayMarketWBTCDAIAddress,
		twoWayDaiWbtc: twoWayMarketWBTCDAIAddress,
		twoWayRicUsdc: twoWayMarketRICUSDCAddress,
		twoWayUsdcRic: twoWayMarketRICUSDCAddress,
		twoWayIbUsdIbEth: twoWayMarketibAlluoUSDETHAddress,
		twoWayIbEthIbUsd: twoWayMarketibAlluoUSDETHAddress,
		twoWayIbUsdIbBTC: twoWayMarketibAlluoUSDBTCAddress,
		twoWayIbBTCIbUsd: twoWayMarketibAlluoUSDBTCAddress,
	};

	return addresses[exchangeKey];
};
