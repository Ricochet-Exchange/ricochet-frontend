import {
	DAIAddress,
	DAIxAddress,
	hostAddress,
	idaAddress,
	MATICxAddress,
	rexReferralAddress,
	RICAddress,
	rickosheaAppAddress,
	usdcEthMarketAddress,
	ethUsdcMarketAddress,
	usdcWbtcMarketAddress,
	wbtcUsdcMarketAddress,
	usdcMaticMarketAddress,
	maticUsdcMarketAddress,
	daiEthMarketAddress,
	ethDaiMarketAddress,
	daiWbtcMarketAddress,
	wbtcDaiMarketAddress,
	daiMaticMarketAddress,
	maticDaiMarketAddress,
	USDCAddress,
	USDCxAddress,
	ricRexShirtLaunchpadAddress,
	ricRexHatLaunchpadAddress,
	WBTCAddress,
	WBTCxAddress,
	WETHAddress,
	WETHxAddress,
	USDC_DAI_MARKET_ADDRESS,
	DAI_USDC_MARKET_ADDRESS,
	twoWayMarketRICUSDCAddress,
	usdcRicMarketAddress,
	IbAlluoUSDAddress,
	StIbAlluoUSDAddress,
	IbAlluoETHAddress,
	StIbAlluoETHAddress,
	IbAlluoBTCAddress,
	StIbAlluoBTCAddress,
	twoWayMarketibAlluoUSDETHAddress,
	twoWayMarketibAlluoUSDBTCAddress,
	usdcxibAlluoUSDAddress,
} from 'constants/polygon_config';

export enum ExchangeKeys {
	'USDC_IBALLUO' = 'usdcxibAlluoUSD',
	'USDC_WBTC' = 'twoWayusdcWbtc',
	'USDC_WETH' = 'twoWayusdcWeth',
	'WBTC_USDC' = 'twoWaywbtcUsdc',
	'WETH_USDC' = 'twoWaywethUsdc',
	'USDC_DAI' = 'usdcDai',
	'DAI_USDC' = 'daiUsdc',
	'TWO_WAY_USDC_RIC' = 'twoWayUsdcRic',
	'TWO_WAY_RIC_USDC' = 'twoWayRicUsdc',
	'TWO_WAY_MATIC_USDC' = 'twoWayMaticUsdc',
	'TWO_WAY_USDC_MATIC' = 'twoWayUsdcMatic',
	'TWO_WAY_MATIC_DAI' = 'twoWayMaticDai',
	'TWO_WAY_DAI_MATIC' = 'twoWayDaiMatic',
	'TWO_WAY_WBTC_DAI' = 'twoWayWbtcDai',
	'TWO_WAY_DAI_WBTC' = 'twoWayDaiWbtc',
	'TWO_WAY_IBUSD_IBETH' = 'twoWayIbUsdIbEth',
	'TWO_WAY_IBETH_IBUSD' = 'twoWayIbEthIbUsd',
	'TWO_WAY_IBUSD_IBBTC' = 'twoWayIbUsdIbBTC',
	'TWO_WAY_IBBTC_IBUSD' = 'twoWayIbBTCIbUsd',
	'MATICx' = 'maticx',
	'DAIx' = 'daix',
	'DAI' = 'dai',
	'USDCx' = 'usdcx',
	'USDC' = 'usdc',
	'WETHx' = 'wethx',
	'WETH' = 'weth',
	'WBTCx' = 'wbtcx',
	'WBTC' = 'wbtc',
	'HOST' = 'host',
	'IDA' = 'ida',
	'RICapp' = 'ricApp',
	'RIC' = 'ric',
	'StIbAlluoUSD' = 'stiballuousd',
	'StIbAlluoETH' = 'stiballuoeth',
	'StIbAlluoBTC' = 'stiballuobtc',
	'IbAlluoUSD' = 'iballuousd',
	'IbAlluoETH' = 'iballuoeth',
	'IbAlluoBTC' = 'iballuobtc',
	'Referral' = 'referral',
}

export const getExchangeAddressFromKey = (exchangeKey: ExchangeKeys) => {
	const addresses = {
		ricRexShirt: ricRexShirtLaunchpadAddress,
		ricRexHat: ricRexHatLaunchpadAddress,
		usdcxibAlluoUSD: usdcxibAlluoUSDAddress,
		maticx: MATICxAddress,
		daix: DAIxAddress,
		dai: DAIAddress,
		usdcx: USDCxAddress,
		usdc: USDCAddress,
		wethx: WETHxAddress,
		weth: WETHAddress,
		wbtcx: WBTCxAddress,
		wbtc: WBTCAddress,
		host: hostAddress,
		ida: idaAddress,
		ricApp: rickosheaAppAddress,
		ric: RICAddress,
		stiballuoeth: StIbAlluoETHAddress,
		stiballuousd: StIbAlluoUSDAddress,
		iballuousd: IbAlluoUSDAddress,
		iballuoeth: IbAlluoETHAddress,
		stiballuobtc: StIbAlluoBTCAddress,
		iballuobtc: IbAlluoBTCAddress,
		referral: rexReferralAddress,
		twoWayusdcWeth: usdcEthMarketAddress,
		twoWaywethUsdc: ethUsdcMarketAddress,
		twoWaywbtcUsdc: wbtcUsdcMarketAddress,
		twoWayusdcWbtc: usdcWbtcMarketAddress,
		twoWayDaiWeth: daiEthMarketAddress,
		twoWayWethDai: ethDaiMarketAddress,
		twoWayMaticUsdc: maticUsdcMarketAddress,
		twoWayUsdcMatic: usdcMaticMarketAddress,
		usdcDai: USDC_DAI_MARKET_ADDRESS,
		daiUsdc: DAI_USDC_MARKET_ADDRESS,
		twoWayMaticDai: maticDaiMarketAddress,
		twoWayDaiMatic: daiMaticMarketAddress,
		twoWayWbtcDai: wbtcDaiMarketAddress,
		twoWayDaiWbtc: daiWbtcMarketAddress,
		twoWayRicUsdc: twoWayMarketRICUSDCAddress,
		twoWayUsdcRic: usdcRicMarketAddress,
		twoWayIbUsdIbEth: twoWayMarketibAlluoUSDETHAddress,
		twoWayIbEthIbUsd: twoWayMarketibAlluoUSDETHAddress,
		twoWayIbUsdIbBTC: twoWayMarketibAlluoUSDBTCAddress,
		twoWayIbBTCIbUsd: twoWayMarketibAlluoUSDBTCAddress,
	};

	//@ts-ignore
	return addresses[exchangeKey];
};
